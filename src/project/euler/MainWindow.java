package project.euler;

import java.util.*;

/**
 *
 * @author Paul
 */
public class MainWindow  extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        beingSolved = new boolean[cont.PROBLEMS_SOLVED];
        answers = new long[cont.PROBLEMS_SOLVED];
        cont = new Controller();
        initComponents();
        loadProblems();
        register();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbProblems = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnStats = new javax.swing.JButton();
        btnSolve = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblAnswer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbProblems.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProblemsItemStateChanged(evt);
            }
        });

        jLabel1.setText("Problem");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Project Euler Solver");
        jLabel2.setToolTipText("");

        btnStats.setLabel("Stats");

        btnSolve.setLabel("Solve");
        btnSolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolveActionPerformed(evt);
            }
        });

        jLabel3.setText("Answer");

        lblAnswer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnswer.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSolve, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnStats, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(lblAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbProblems, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbProblems, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSolve, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStats, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolveActionPerformed
        // Get Problem to Solve
        int problemToSolve = cmbProblems.getSelectedIndex() + 1;
        
        beingSolved[cmbProblems.getSelectedIndex()] = true;
        
        cont.answerQuestion(problemToSolve);
        
        btnSolve.setEnabled(false);
        
    }//GEN-LAST:event_btnSolveActionPerformed

    private void cmbProblemsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProblemsItemStateChanged
        if(cmbProblems.getSelectedIndex() >= 0)
        {
                    if(beingSolved[cmbProblems.getSelectedIndex()])
        {
            long val = answers[cmbProblems.getSelectedIndex()];
            lblAnswer.setText("" + val);
            btnSolve.setEnabled(false);
        }
        else {
            long val = answers[cmbProblems.getSelectedIndex()];
            lblAnswer.setText("" + val);
            btnSolve.setEnabled(true);
        }
        }

    }//GEN-LAST:event_cmbProblemsItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainWindow win = new MainWindow();
                win.setLocationRelativeTo(null);
                win.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSolve;
    private javax.swing.JButton btnStats;
    private javax.swing.JComboBox<String> cmbProblems;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblAnswer;
    // End of variables declaration//GEN-END:variables
    private Controller cont = null;
    private boolean[] beingSolved = null;
    private long[] answers = null;
    
    private void loadProblems() {
        for (int i = 1; i <= cont.PROBLEMS_SOLVED; i++) {
            cmbProblems.addItem("Problem " + i);
            answers[i - 1] = 0;
        }
    }
    
    /**
     * Registers this window with the Controller.
     */
    private void register() {
        cont.registerObserver(this);
    }
    
    /**
     * Updates the current answer of the problem.
     * @param problemNumber problem number which has been solved.
     * @param answer the answer to the problem.
     */
    @Override
    public void update(int problemNumber, long answer) {
        answers[problemNumber - 1] = answer;
        beingSolved[problemNumber - 1] = false;
        if(cmbProblems.getSelectedIndex() == problemNumber - 1) {
            lblAnswer.setText("" + answer);
            if(!btnSolve.isEnabled())
                btnSolve.setEnabled(true);
        }
    }
}
